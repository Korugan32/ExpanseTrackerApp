package com.korugan.expansetrackerapp.presentation.ui.theme
import androidx.compose.ui.graphics.Color

val primaryLightHighContrast = Color(0xFF001F54)
val onPrimaryLightHighContrast = Color(0xFFFFFFFF)
val primaryContainerLightHighContrast = Color(0xFF003D96)
val onPrimaryContainerLightHighContrast = Color(0xFFFFFFFF)
val secondaryLightHighContrast = Color(0xFF08204D)
val onSecondaryLightHighContrast = Color(0xFFFFFFFF)
val secondaryContainerLightHighContrast = Color(0xFF2E4170)
val onSecondaryContainerLightHighContrast = Color(0xFFFFFFFF)
val tertiaryLightHighContrast = Color(0xFF3E0051)
val onTertiaryLightHighContrast = Color(0xFFFFFFFF)
val tertiaryContainerLightHighContrast = Color(0xFF6E108C)
val onTertiaryContainerLightHighContrast = Color(0xFFFFFFFF)
val errorLightHighContrast = Color(0xFF4E0002)
val onErrorLightHighContrast = Color(0xFFFFFFFF)
val errorContainerLightHighContrast = Color(0xFF8C0009)
val onErrorContainerLightHighContrast = Color(0xFFFFFFFF)
val backgroundLightHighContrast = Color(0xFFFAF8FF)
val onBackgroundLightHighContrast = Color(0xFF191B23)
val surfaceLightHighContrast = Color(0xFFFAF8FF)
val onSurfaceLightHighContrast = Color(0xFF000000)
val surfaceVariantLightHighContrast = Color(0xFFDFE2F3)
val onSurfaceVariantLightHighContrast = Color(0xFF1F2430)
val outlineLightHighContrast = Color(0xFF3E4250)
val outlineVariantLightHighContrast = Color(0xFF3E4250)
val scrimLightHighContrast = Color(0xFF000000)
val inverseSurfaceLightHighContrast = Color(0xFF2E3038)
val inverseOnSurfaceLightHighContrast = Color(0xFFFFFFFF)
val inversePrimaryLightHighContrast = Color(0xFFE7EBFF)
val surfaceDimLightHighContrast = Color(0xFFD9D9E4)
val surfaceBrightLightHighContrast = Color(0xFFFAF8FF)
val surfaceContainerLowestLightHighContrast = Color(0xFFFFFFFF)
val surfaceContainerLowLightHighContrast = Color(0xFFF2F3FD)
val surfaceContainerLightHighContrast = Color(0xFFEDEDF8)
val surfaceContainerHighLightHighContrast = Color(0xFFE7E7F2)
val surfaceContainerHighestLightHighContrast = Color(0xFFE1E2EC)

val primaryDarkHighContrast = Color(0xFFFCFAFF)
val onPrimaryDarkHighContrast = Color(0xFF000000)
val primaryContainerDarkHighContrast = Color(0xFFB7CAFF)
val onPrimaryContainerDarkHighContrast = Color(0xFF000000)
val secondaryDarkHighContrast = Color(0xFFFCFAFF)
val onSecondaryDarkHighContrast = Color(0xFF000000)
val secondaryContainerDarkHighContrast = Color(0xFFB7CAFF)
val onSecondaryContainerDarkHighContrast = Color(0xFF000000)
val tertiaryDarkHighContrast = Color(0xFFFFF9FA)
val onTertiaryDarkHighContrast = Color(0xFF000000)
val tertiaryContainerDarkHighContrast = Color(0xFFF2B6FF)
val onTertiaryContainerDarkHighContrast = Color(0xFF000000)
val errorDarkHighContrast = Color(0xFFFFF9F9)
val onErrorDarkHighContrast = Color(0xFF000000)
val errorContainerDarkHighContrast = Color(0xFFFFBAB1)
val onErrorContainerDarkHighContrast = Color(0xFF000000)
val backgroundDarkHighContrast = Color(0xFF11131A)
val onBackgroundDarkHighContrast = Color(0xFFE1E2EC)
val surfaceDarkHighContrast = Color(0xFF11131A)
val onSurfaceDarkHighContrast = Color(0xFFFFFFFF)
val surfaceVariantDarkHighContrast = Color(0xFF424654)
val onSurfaceVariantDarkHighContrast = Color(0xFFFCFAFF)
val outlineDarkHighContrast = Color(0xFFC7CADB)
val outlineVariantDarkHighContrast = Color(0xFFC7CADB)
val scrimDarkHighContrast = Color(0xFF000000)
val inverseSurfaceDarkHighContrast = Color(0xFFE1E2EC)
val inverseOnSurfaceDarkHighContrast = Color(0xFF000000)
val inversePrimaryDarkHighContrast = Color(0xFF002664)
val surfaceDimDarkHighContrast = Color(0xFF11131A)
val surfaceBrightDarkHighContrast = Color(0xFF373941)
val surfaceContainerLowestDarkHighContrast = Color(0xFF0C0E15)
val surfaceContainerLowDarkHighContrast = Color(0xFF191B23)
val surfaceContainerDarkHighContrast = Color(0xFF1D1F27)
val surfaceContainerHighDarkHighContrast = Color(0xFF272A32)
val surfaceContainerHighestDarkHighContrast = Color(0xFF32343D)